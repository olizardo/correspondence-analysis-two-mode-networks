---
title: "Two Mode Networks and Relational Similarity"
author: "Omar Lizardo"
date: "`r Sys.Date()`"
---

# Setup
```{r setup}
   knitr::opts_chunk$set(include = TRUE, 
                       echo = FALSE, 
                       warning = FALSE, 
                       message = FALSE)
   library(cowplot)
   library(here)
   library(patchwork)
   library(dplyr)
   library(factoextra)
   library(ggbump)
   library(ggcorrplot)
   library(ggplot2)
   library(ggpubr)
   library(ggrepel)
   library(igraph)
   library(pals)
   library(patchwork)
   source(here("Functions", "TwoModeCA.R"))
   source(here("Functions", "TwoModeSR.R"))
   source(here("Functions", "reflections.R"))
   source(here("Functions", "ref.long.dat.R"))
```

# Data
```{r Southern women data}
    A <- matrix(
         c(
          1, 1, 1, 1, 1,  1, 0, 1, 1,  0, 0, 0, 0, 0, 
          1, 1, 1, 0, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 1, 1, 1, 1,  1, 1, 1, 1,  0, 0, 0, 0, 0, 
          1, 0, 1, 1, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 1, 1, 1,  0, 1, 0, 0,  0, 0, 0, 0, 0, 
          0, 0, 1, 1, 1,  1, 0, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 0, 1, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 0, 1, 1,  0, 1, 1, 1,  0, 0, 0, 0, 0, 
          
          0, 0, 0, 0, 0,  0, 1, 1, 1,  0, 0, 1, 0, 0, 
          0, 0, 0, 0, 0,  0, 0, 1, 1,  1, 0, 1, 0, 0, 
          0, 0, 0, 0, 0,  0, 0, 1, 1,  1, 0, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 1, 1,  1, 0, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 0, 1,  1, 1, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 1, 0,  1, 1, 1, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0, 
          
          0, 0, 0, 0, 0,  1, 0, 1, 1,  0, 0, 0, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 1, 1,  0, 0, 0, 0, 0),
          ncol = 14, byrow = TRUE)
     w <- c("EVELYN", "LAURA", "THERESA", "BRENDA", "CHARLOTTE", "FRANCES", "ELEANOR", "RUTH", "VERNE", "MYRA", "KATHERINE", "SYLVIA", "NORA", "HELEN", "OLIVIA", "FLORA", "PEARL", "DOROTHY")
     e <- paste("E", c(1:14), sep = "")
     rownames(A) <- w
     colnames(A) <- e
```

# Analysis

```{r Reflections Bump Charts}
   evens <- function(x) subset(x, x %% 2 == 0)
   odds <- function(x) subset(x, x %% 2 != 0)
   a <- reflections(A, iter = 26)
   p.e.r <- a$p.r[, evens(1:20)]
   p.o.r <- a$p.r[, odds(1:20)]
   p.o.r <- p.o.r[, -1]
   b <- ref.long.dat(a = a$p.r, b = a$g.r, max.iter = 26)
   plot.dat <- b$person$even
   p <- ggplot(data = filter(plot.dat, n.iter < 22),
               mapping = aes(x = n.iter, y = ref, color = person))
   # geoms
   p <- p + geom_bump(linewidth = 1, smooth = 8, alpha = 0.4)
   p <- p + geom_point(size = 4, alpha = 0.8)
   p <- p + geom_text_repel(data = filter(plot.dat, n.iter == 2), 
                                    aes(x = n.iter, label = person), 
                                    size = 4, nudge_x = -3)
   p <-    p <- p + geom_text(data = filter(plot.dat, n.iter == 22), 
                              aes(x = n.iter, label = person), 
                              size = 4, nudge_x = 0.5)

   # fixings
   p <- p + theme_minimal_grid(font_size = 14, line_size = 0)
   p <- p + scale_x_continuous(limits = c(-4, 30), breaks = evens(2:20))
   p <- p + labs(x = "Reflection")
   p <- p + scale_y_reverse()
   p <- p + theme(legend.position = "none",
        panel.grid.major = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank()
        )
   p1 <- p + scale_color_manual(values=as.vector(cols25(18)))

   
   plot.dat <- b$group$even
   p <- ggplot(data = filter(plot.dat, n.iter < 22),
               mapping = aes(x = n.iter, y = ref, color = group))
   #geoms
   p <- p + geom_bump(linewidth = 1, smooth = 8, alpha = 0.4)
   p <- p + geom_point(size = 4, alpha = 1)
   p <-    p <- p + geom_text(data = filter(plot.dat, n.iter == 24), 
                              aes(x = n.iter, label = group), 
                              size = 4, nudge_x = -2)
   p <-    p <- p + geom_text_repel(data = filter(plot.dat, n.iter == 2), 
                                    aes(x = n.iter, label = group), 
                                    size = 4, nudge_x = -1)
   #fixings
   p <- p + theme_minimal_grid(font_size = 14, line_size = 0)
   p <- p + scale_x_continuous(limits = c(-4, 30), breaks = evens(2:20))
   p <- p + labs(x = "Reflection")
   p <- p + scale_y_reverse()
   p <- p + theme(legend.position = "none",
        panel.grid.major = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank()
        )
   p2 <- p + scale_color_manual(values=as.vector(cols25(15)))
   png(file = here("Plots", "pg-reflections.jpg"), width=750, height=950)
   p1 / p2
   dev.off()
```

```{r CA versus Bonacich Re-ordered Affiliation Matrices}
   source(here("Functions", "TwoModeCA.R"))
   a <- TwoModeCA(A)
   b <- a$ca.A
   c <- a$bon.A
   png(file = here("Plots", "ca-v-bon-reord.png"), width=1000, height=700)
      (b | c) + plot_annotation(tag_levels = "a") &
      theme(plot.tag = element_text(size = 20))
   dev.off() 
```

```{r Eigenvector Plot}
   source(here("Functions", "TwoModeCA.R"))
    tmCA.res <- TwoModeCA(A, k.r = 2, k.c = 2)
    a <- tmCA.res$eigvec.plot.r + theme(axis.text = element_blank())
    b <- tmCA.res$eigvec.plot.c 
    c <- tmCA.res$eigval.plot.r
    d <- tmCA.res$eigval.plot.c
    a <- a + inset_element(c, left = 0.01, right = 0.4, bottom = 0.55, top = 1)
    b <- b + inset_element(d, left = 0.01, right = 0.4, bottom = 0.55, top = 1)
    
    png(file = here("Plots", "ca-eigvec.png"), width=1000, height=600)
        (a | b) + plot_annotation(tag_levels = "a") &
      theme(plot.tag = element_text(size = 20))
    dev.off() 
```

```{r Similarity and Correspondence Plot (CA)}
   source(here("Functions", "TwoModeCA.R"))
    tmCA.res <- TwoModeCA(A, d.r = 4, d.c = 4, k.r = 3, k.c = 3)
    a <- tmCA.res$ca.sim.plot.r + theme(axis.text.x = element_blank())
    b <- tmCA.res$ca.sim.plot.c + theme(axis.text.x = element_blank())
    c <- tmCA.res$ca.corr.plot
    
    png(file = here("Plots", "ca-sim.png"), width=950, height=700)
      (a | b) / c + plot_annotation(tag_levels = "a") &
      theme(plot.tag = element_text(size = 20)) 
    dev.off() 
```

```{r Similarity and Correspondence Plot (Bonacich)}
   source(here("Functions", "TwoModeCA.R"))
    tmCA.res <- TwoModeCA(A, d.r = 4, d.c = 4, b.r = 4, b.c = 4)
    a <- tmCA.res$bon.sim.plot.r + theme(axis.text.x = element_blank())
    b <- tmCA.res$bon.sim.plot.c + theme(axis.text.x = element_blank())
    c <- tmCA.res$bon.corr.plot
    
    png(file = here("Plots", "bon-sim.png"), width=950, height=700)
      (a | b) / c + 
       plot_annotation(tag_levels = "a") &
      theme(plot.tag = element_text(size = 20)) 
    dev.off() 
```

```{r SimRank Plot}
   source(here("Functions", "TwoModeSR.R"))
   tmSR.res <- TwoModeSR(A, C = 0.8, iter = 10)
    a <- tmSR.res$eigvec.plot.r + theme(axis.text = element_blank())
    b <- tmSR.res$eigvec.plot.c 
    c <- tmSR.res$eigval.plot.r
    d <- tmSR.res$eigval.plot.c
    #a <- a + inset_element(c, left = 0.01, right = 0.4, bottom = 0.55, top = 1)
    #b <- b + inset_element(d, left = 0.01, right = 0.4, bottom = 0.55, top = 1)
    e <- tmSR.res$A.plot
    f <- tmSR.res$corr.plot
   dat.r <- data.frame(ca = as.numeric(tmCA.res$ca.eigvec.r[,1]),
                       sr = tmSR.res$ov.r,
                       lab = rownames(A))
   dat.c <- data.frame(ca = as.numeric(tmCA.res$ca.eigvec.c[,1]),
                       sr = tmSR.res$ov.c,
                       lab = colnames(A))
   g <- ggscatter(dat.r, x = "ca", y = "sr", 
                  label = "lab", repel = TRUE, 
                  add = "reg.line", 
                  add.params = list(color = "gray80", linewidth = 0.5, linetype = 2))
   h <- ggscatter(dat.c, x = "ca", y = "sr", 
                  label = "lab", repel = TRUE, 
                  add = "reg.line",
                  add.params = list(color = "gray80", linewidth = 0.5, linetype = 2))
   i <- (a | b | e) 
   j <- (f | (g / h)) + plot_layout(widths = c(2.5, 1))
   png(file = here("Plots", "sr-plot.png"), width=1200, height=1200)
       (i / j) +
       plot_annotation(tag_levels = "a") &
       theme(plot.tag = element_text(size = 20))
    dev.off()

```



