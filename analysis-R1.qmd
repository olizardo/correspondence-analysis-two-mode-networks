---
title: "The Correspondence Analysis of Two Mode Networks Revisited"
author: "Omar Lizardo"
date: "`r Sys.Date()`"
---

# Setup
```{r setup}
      knitr::opts_chunk$set(include = TRUE, 
                       echo = FALSE, 
                       warning = FALSE, 
                       message = FALSE)
      library(conflicted)
      library(cowplot)
      library(ggcorrplot)
      library(ggbump)
      library(ggplot2)
      library(ggpubr)
      library(ggrepel)
      library(here)
      library(factoextra)
      library(igraph)
      library(kableExtra)
      library(networkdata)
      library(pals)
      library(patchwork)
      library(stringr)
      conflicted::conflicts_prefer(dplyr::filter)
```


```{r Southern Women Data Matrix}
     A <- as.matrix(as_biadjacency_matrix(southern_women))
     p.names <- str_to_title(rownames(A))
     p.names[which(p.names == "Myrna")] <- "Myra"
     rownames(A) <- p.names
     colnames(A) <- str_replace(colnames(A), "/", "-")
     wlab <- paste("W", 1:18, sep = "")
     wlab <- paste(wlab, rownames(A), sep = " (")
     wlab <- paste(wlab, ")", sep = "")
     elab <- paste("E", 1:14, sep = "")
     elab <- paste(elab, colnames(A), sep = " (")
     elab <- paste(elab, ")", sep = "")
     rownames(A) <- wlab
     colnames(A) <- elab
     p <- ggcorrplot(t(A), colors = c("white", "white", "white"), 
                     lab = TRUE, lab_size = 6.5) 
     p <- p + theme(legend.position = "none", 
                  axis.text.y = element_text(size = 16, family = "serif"),
                  axis.text.x = element_text(size = 16, angle = 45, hjust = -0.2, family = "serif")
                  )
     p <- p + scale_x_discrete(position = "top") 
     p <- p + scale_y_discrete(limits = rev)
     jpeg(file = here("Plots", "southern-women.jpg"), width=800, height=800)
     p
     dev.off()
```

```{r Faust-Style CA}
   rs <- rowSums(A)
   cs <- colSums(A)
   R <- diag(1/sqrt(rs))
   C <- diag(1/sqrt(cs))
   A.n <- R %*% A %*% C
   ca.res <- svd(A.n)
   N <- sum(A)
   d1.r <- ca.res$d[2] * ca.res$u[, 2] * sqrt(N/rs)
   d1.c <- ca.res$d[2] * ca.res$v[, 2] * sqrt(N/cs)
   d1 <- c(d1.r, d1.c)
   d2.r <- ca.res$d[3] * ca.res$u[, 3] * sqrt(N/rs)
   d2.c <- ca.res$d[3] * ca.res$v[, 3] * sqrt(N/cs)
   d2 <- c(d2.r, d2.c)
```

```{r Two Mode Eigenvector Scores}
   eig.r <- eigen(A %*% t(A))$vectors
   eig.c <- eigen(t(A) %*% A)$vectors
```

```{r Reflections Bump Charts}
   source(here("Functions", "reflections.R"))
   source(here("Functions", "ref.long.dat.R"))
   evens <- function(x) subset(x, x %% 2 == 0)
   odds <- function(x) subset(x, x %% 2 != 0)
   a <- reflections(A, iter = 26)
   p.e.r <- a$p.r[, evens(1:20)]
   g.e.r <- a$g.r[, evens(1:20)]
   b <- ref.long.dat(a = p.e.r, b = g.e.r, max.iter = 26)
   plot.dat <- b$person
   p <- ggplot(data = filter(plot.dat, n.iter < 18),
               mapping = aes(x = n.iter, y = ref, color = person))
   # geoms
   p <- p + geom_bump(linewidth = 1.1, smooth = 8)
   p <- p + geom_point(size = 5)
   p <- p + geom_text_repel(data = filter(plot.dat, n.iter == 2), 
                                    aes(x = n.iter, label = person), 
                                    size = 5, nudge_x = -3)
   p <-    p <- p + geom_text_repel(data = filter(plot.dat, n.iter == 18), 
                              aes(x = n.iter, label = person), 
                              size = 5, nudge_x = 0.01)

   # fixings
   p <- p + theme_minimal_grid(font_size = 14, line_size = 0)
   p <- p + scale_x_continuous(limits = c(-2, 20), breaks = evens(2:16))
   p <- p + labs(x = "Reflection")
   p <- p + scale_y_reverse()
   p <- p + theme(legend.position = "none",
        panel.grid.major = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(size = 16)
        )
   set.seed(145)
   c <- sample(cols25(25), 18, replace = FALSE)
   p1 <- p + scale_color_manual(values=as.vector(c))
   png(file = here("Plots", "p-reflections.png"), width=600, height=625)
   p1
   dev.off()

   plot.dat <- b$group
   p <- ggplot(data = filter(plot.dat, n.iter < 14),
               mapping = aes(x = n.iter, y = ref, color = group))
   #geoms
   p <- p + geom_bump(linewidth = 1.1, smooth = 8)
   p <- p + geom_point(size = 5)
   p <- p + geom_text_repel(data = filter(plot.dat, n.iter == 2), 
                                    aes(x = n.iter, label = group), 
                                    size = 6, nudge_x = -1)
   p <- p + geom_text_repel(data = filter(plot.dat, n.iter == 14), 
                              aes(x = n.iter, label = group), 
                              size = 6, nudge_x = -0.01)
   #fixings
   p <- p + theme_minimal_grid(font_size = 14, line_size = 0)
   p <- p + scale_x_continuous(limits = c(1, 14), breaks = evens(2:12))
   p <- p + labs(x = "Reflection")
   p <- p + scale_y_reverse()
   p <- p + theme(legend.position = "none",
        panel.grid.major = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(size = 16)
        )
   set.seed(145)
   c <- sample(cols25(25), 18, replace = FALSE)
   p2 <- p + scale_color_manual(values=as.vector(c))
   png(file = here("Plots", "g-reflections.png"), width=600, height=625)
   p2
   dev.off()
```

```{r CA versus Reflections Scatter}
   p.plot.dat <- data.frame(c = tm$ca.eigvec.r[, 1]*-1, r = a$p.s[, 26])
   p <- ggplot(data = p.plot.dat, aes(x = c, y = r))
   p <- p + geom_smooth(method = "lm", se=FALSE, formula = y ~ x, color = "gray")
   p <- p + geom_point(size = 3, color = "blue") 
   p <- p + geom_text_repel(aes(label = rownames(p.plot.dat)), color = "red")
   p <- p + theme_minimal() + labs(x = "First CA Dimension", y = "26th Reflection (Standardized)")
   p <- p + theme(axis.text = element_text(size = 16),
                  axis.title = element_text(size = 16))
   png(file = here("Plots", "p-ca-ref-corr.png"), width=600, height=625)
   p
   dev.off()

   g.plot.dat <- data.frame(cbind(c = tm$ca.eigvec.c[, 1]*-1, r = a$g.s[, 26]))
   p <- ggplot(data = g.plot.dat, aes(x = c, y = r))
   p <- p + geom_smooth(method = "lm", se=FALSE, formula = y ~ x, color = "gray")
   p <- p + geom_point(size = 3, color = "red") 
   p <- p + geom_text_repel(aes(label = rownames(g.plot.dat)), 
                            color = "blue", size = 6)
   p <- p + theme_minimal() + labs(x = "First CA Dimension", y = "26th Reflection (Standardized)")
   p <- p + theme(axis.text = element_text(size = 16),
                  axis.title = element_text(size = 16))
   png(file = here("Plots", "g-ca-ref-corr.png"), width=600, height=625)
   p
   dev.off()
```

```{r CA versus Bonacich Re-ordered Affiliation Matrices}
      # Affiliation matrix plot (CA ordering)
      A.ord <- as.matrix(A[order(d1.r*-1), order(d1.c)])
      A.plot <- ggcorrplot(t(A.ord)) 
      A.plot <- A.plot + scale_x_discrete(position = "top")
      A.plot1 <- A.plot + theme(legend.position = "none",
                               axis.text.x = element_text(hjust = -0.2))
      # Affiliation matrix plot (Bonacich ordering)
      A.ord <- as.matrix(A[order(eig.r[, 1]*-1), order(eig.c[, 1])])
      A.plot <- ggcorrplot(t(A.ord)) 
      A.plot <- A.plot + scale_x_discrete(position = "top")
      A.plot2 <- A.plot + theme(legend.position = "none",
                               axis.text.x = element_text(hjust = -0.2)) 
      
     # Affiliation matrix plot (Bonacich ordering)
      A.ord2 <- as.matrix(A[order(eig.r[, 2]*-1), order(eig.c[, 2])])
      A.plot <- ggcorrplot(t(A.ord2)) 
      A.plot <- A.plot + scale_x_discrete(position = "top")
      A.plot3 <- A.plot + theme(legend.position = "none",
                               axis.text.x = element_text(hjust = -0.2)) 
      
      png(file = here("Plots", "ca-reord.png"), width=500, height=500)
      A.plot1
      dev.off() 
      png(file = here("Plots", "bon-reord1.png"), width=500, height=500)
      A.plot2
      dev.off() 
      png(file = here("Plots", "bon-reord2.png"), width=500, height=500)
      A.plot3
      dev.off()
```

```{r Row Schastic Projections Plot}
   D.p <- diag(1/rowSums(A)) #inverse of degree matrix of persons
   P.pg <- D.p %*% A
   rownames(P.pg) <- rownames(A) 
   D.g <- diag(1/colSums(A)) #inverse of degree matrix of groups
   P.gp <- D.g %*% t(A)
   rownames(P.gp) <- colnames(A)
   P.pp <- P.pg %*% P.gp
   P.gg <- P.gp %*% P.pg
   rownames(P.pp) <- substr(colnames(P.pp), start = 1, stop = 3)
   rownames(P.gg) <- substr(colnames(P.gg), start = 1, stop = 3)
   P.p <- ggcorrplot(P.pp, lab = TRUE) +
      theme(legend.position = "none", 
            axis.text.x = element_text(hjust = -0.2)) + 
      scale_x_discrete(position = "top") + scale_y_discrete(limits=rev) +
      scale_fill_gradient2(breaks = c(0, .5), limit = c(0, .5))
   P.g <- ggcorrplot(P.gg, lab = TRUE) +
      theme(legend.position = "none", 
            axis.text.x = element_text(hjust = -0.2)) + 
      scale_x_discrete(position = "top") + scale_y_discrete(limits=rev) +
      scale_fill_gradient2(breaks = c(0, .5), limit = c(0, .5))
   png(file = here("Plots", "p-norm.png"), width=600, height=500)
   P.p
   dev.off() 
   png(file = here("Plots", "g-norm.png"), width=600, height=500)
   P.g
   dev.off() 
```

```{r Normalized similarity Matrices}
      S.r <- A %*% diag(1/cs) %*% t(A) #degree-normalized similarity matrix for rows
      S.c <- t(A) %*% diag(1/rs) %*% A #degree-normalized similarity matrix for columns
      eig.Sr <- eigen(S.r)
      eig.Sc <- eigen(S.c)
```

```{r CA Eigenvector Plot} 
      eigvec.dat.r <- data.frame(rank = rank(d1.r), 
                             value = as.numeric(d1.r),
                             lab = names(d1.r))
      eigvec.dat.c <- data.frame(rank = rank(d1.c), 
                             value = as.numeric(d1.c),
                             lab = names(d1.c))
      eigval.dat.r <- data.frame(k = 1:nrow(A), value = as.numeric(eig.Sr$values)) %>% 
             mutate(value = value / max(value))
      eigval.dat.c <- data.frame(k = 1:ncol(A), value = as.numeric(eig.Sc$values)) %>% 
             mutate(value = value / max(value))
      
      # Eigenvector plot for the people
      p <- ggscatter(eigvec.dat.r, y = "rank", x = "value", point = FALSE,
                 font.label =  10, label = "lab", repel = TRUE)
      p <- p + theme(axis.text.y = element_blank(),
                 axis.line.x = element_blank(),
                 axis.line.y = element_blank(),
                 axis.ticks = element_blank(),
                 legend.position = "none")
      p <- p + labs(y = "Rank", x = "First Axis") 
      a <- p + geom_vline(xintercept = 0, linewidth = 0.5, linetype = 2, color = "gray")
      
      # Eigenvector plot for the groups
      p <- ggscatter(eigvec.dat.c, y = "rank", x = "value", point = FALSE,
                 font.label =  10, label = "lab", repel = TRUE)
      p <- p + theme(axis.text.y = element_blank(),
                 axis.line.x = element_blank(),
                 axis.line.y = element_blank(),
                 axis.ticks = element_blank(),
                 legend.position = "none")
      p <- p + labs(y = "Rank", x = "First Axis") 
      b <- p + geom_vline(xintercept = 0, linewidth = 0.5, linetype = 2, color = "gray")
      
      # Eigenvalue plot for the people
      p <- ggscatter(eigval.dat.r, x = "k", y = "value", size = 2, color = "black")
      p <- p + labs(y = "", x = "k") 
      c <- p + theme(axis.text.x = element_blank(),
                    axis.text.y = element_text(size = 8),
                    axis.line.y = element_blank(),
                    axis.line.x = element_blank())
      
      # Eigenvalue plot for the groups
      p <- ggscatter(eigval.dat.c, x = "k", y = "value", size = 2, color = "black")
      p <- p + labs(y = "", x = "k") 
      d <- p + theme(axis.text.x = element_blank(),
                    axis.text.y = element_text(size = 8),
                    axis.line.y = element_blank(),
                    axis.line.x = element_blank())
      a <- a + inset_element(c, left = 0.7, right = 1, bottom = 0, top = 0.45)
      b <- b + inset_element(d, left = 0.7, right = 1, bottom = 0, top = 0.45)
      png(file = here("Plots", "p-ca-eigvec.png"), width=500, height=500)
      a
      dev.off() 
      png(file = here("Plots", "g-ca-eigvec.png"), width=500, height=500)
      b
      dev.off() 
```

```{r CA Similarity and Correspondence Plot}
   norm.sim.r <- as.matrix(S.r/max(S.r))
   norm.sim.c <- as.matrix(S.c/max(S.c))
   norm.sim.r <- norm.sim.r[order(d1.r), order(d1.r)]
   norm.sim.c <- norm.sim.c[order(d1.c), order(d1.c)]
   
   # CA Similarity Plot (People)
   p <- ggcorrplot(norm.sim.r)
   p <- p + scale_x_discrete(position = "top")
   p <- p + scale_y_discrete(limits = rev)
   a <- p + theme(legend.position = "none",
                 axis.text.x = element_text(hjust = -0.2, size = 10)) 
   
   # CA Similarity Plot (Groups)
   p <- ggcorrplot(norm.sim.c)
   p <- p + scale_x_discrete(position = "top")
   p <- p + scale_y_discrete(limits = rev)
   b <- p + theme(legend.position = "none",
                 axis.text.x = element_text(hjust = -0.2, size = 10)) 
   # CA Correspondence Plot
   plot.dat <- data.frame(d1, d2, mode = c(rep(1, 18), rep(2, 14)))
   p <- ggplot(plot.dat, aes(y = d2, x = d1, color = factor(mode), label = rownames(plot.dat)))
   p <- p + geom_vline(xintercept = 0, color = "gray")
   p <- p + geom_hline(yintercept = 0, color = "gray")
   p <- p + geom_text_repel(size = 4, max.overlaps = 50)
   p <- p + theme_minimal() 
   p <- p + theme(legend.position = "none",
                  axis.text = element_text(size = 18),
                  axis.title = element_text(size = 20)
                  )
   p <- p + labs(x = "Second Dimension", y = "First Dimension")
   c <- p + scale_color_manual(values = c('red', 'blue'))
   png(file = here("Plots", "ca-corr-plot.png"), width=1200, height=900)
   (a + b) / c
   dev.off()
```

```{r Bonacich Similarity and Correspondence Plot}
   AAt <- A %*% t(A)
   AtA <- t(A) %*% A
   norm.sim.r <- as.matrix(AAt/max(AAt))
   norm.sim.c <- as.matrix(AtA/max(AtA))
   norm.sim.r <- norm.sim.r[order(eig.r[, 1]), order(eig.r[ ,1])]
   norm.sim.c <- norm.sim.c[order(eig.c[, 1]), order(eig.c[ ,1])]
   
   # Bonacich Similarity Plot (People)
   p <- ggcorrplot(norm.sim.r)
   p <- p + scale_x_discrete(position = "top")
   p <- p + scale_y_discrete(limits = rev)
   a <- p + theme(legend.position = "none",
                 axis.text.x = element_text(hjust = -0.2, size = 10)) 
   
   # Bonacich Similarity Plot (Groups)
   p <- ggcorrplot(norm.sim.c)
   p <- p + scale_x_discrete(position = "top")
   p <- p + scale_y_discrete(limits = rev)
   b <- p + theme(legend.position = "none",
                 axis.text.x = element_text(hjust = -0.2, size = 10)) 
   # Bonacich Correspondence Plot
   eig.d1 <- c(eig.r[, 1], eig.c[, 1])
   eig.d2 <- c(eig.r[, 2], eig.c[, 2])
   plot.dat <- data.frame(eig.d1, eig.d2, mode = c(rep(1, 18), rep(2, 14)))
   p <- ggplot(plot.dat, aes(y = eig.d2, x = eig.d1, color = factor(mode), 
                             label = c(rownames(A), colnames(A))))
   p <- p + geom_vline(xintercept = 0, color = "gray")
   p <- p + geom_hline(yintercept = 0, color = "gray")
   p <- p + geom_text_repel(size = 4, max.overlaps = 50)
   p <- p + theme_minimal() 
   p <- p + theme(legend.position = "none",
                  axis.text = element_text(size = 18),
                  axis.title = element_text(size = 20)
                  )
   p <- p + labs(x = "Second Dimension", y = "First Dimension")
   c <- p + scale_color_manual(values = c('red', 'blue'))
   png(file = here("Plots", "bon-corr-plot.png"), width=1200, height=900)
   (a + b) / c
   dev.off()
```


